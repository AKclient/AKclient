local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local userInputService = game:GetService("UserInputService")

-- GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.Name = "AkClientUI"
screenGui.ResetOnSpawn = false

-- Main GUI Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 250)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -125)
mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
mainFrame.BackgroundTransparency = 0.4 -- More noticeable transparency
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

-- UI Stroke (Purple Glow)
local glow = Instance.new("UIStroke")
glow.Parent = mainFrame
glow.Thickness = 2
glow.Color = Color3.fromRGB(128, 0, 255)
glow.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

-- Title Label
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 30)
titleLabel.Text = "AkClient"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextScaled = true
titleLabel.BackgroundTransparency = 1
titleLabel.Parent = mainFrame

-- Function to Create Input Boxes
local function createInput(name, posY, default, callback)
    local inputFrame = Instance.new("Frame")
    inputFrame.Size = UDim2.new(0.9, 0, 0, 40)
    inputFrame.Position = UDim2.new(0.05, 0, 0, posY)
    inputFrame.BackgroundTransparency = 1
    inputFrame.Parent = mainFrame

    local inputLabel = Instance.new("TextLabel")
    inputLabel.Size = UDim2.new(1, 0, 0, 20)
    inputLabel.Text = name
    inputLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    inputLabel.Font = Enum.Font.Gotham
    inputLabel.TextSize = 14
    inputLabel.BackgroundTransparency = 1
    inputLabel.Parent = inputFrame

    local inputBox = Instance.new("TextBox")
    inputBox.Size = UDim2.new(1, 0, 0, 20)
    inputBox.Position = UDim2.new(0, 0, 0, 20)
    inputBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    inputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    inputBox.Font = Enum.Font.Gotham
    inputBox.TextSize = 14
    inputBox.Text = tostring(default)
    inputBox.Parent = inputFrame

    inputBox.FocusLost:Connect(function()
        local value = tonumber(inputBox.Text)
        if value then
            callback(value)
        else
            inputBox.Text = tostring(default)
        end
    end)
end

-- Walkspeed Input
createInput("Walkspeed", 40, 16, function(value)
    humanoid.WalkSpeed = value
end)

-- Jump Power Input
createInput("Jump Power", 90, 50, function(value)
    humanoid.JumpPower = value
end)

-- Noclip Toggle
local noclipEnabled = false
local noclipButton = Instance.new("TextButton")
noclipButton.Size = UDim2.new(0, 100, 0, 40)
noclipButton.Position = UDim2.new(0.5, -50, 0, 150)
noclipButton.Text = "Noclip: OFF"
noclipButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
noclipButton.TextColor3 = Color3.fromRGB(255, 255, 255)
noclipButton.Font = Enum.Font.GothamBold
noclipButton.TextSize = 14
noclipButton.Parent = mainFrame

noclipButton.MouseButton1Click:Connect(function()
    noclipEnabled = not noclipEnabled
    noclipButton.BackgroundColor3 = noclipEnabled and Color3.fromRGB(128, 0, 255) or Color3.fromRGB(50, 50, 50)
    noclipButton.Text = noclipEnabled and "Noclip: ON" or "Noclip: OFF"

    while noclipEnabled do
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") and part.CanCollide then
                part.CanCollide = false
            end
        end
        wait()
    end
end)

-- ESP Toggle
local espEnabled = false
local espButton = Instance.new("TextButton")
espButton.Size = UDim2.new(0, 100, 0, 40)
espButton.Position = UDim2.new(0.5, -50, 0, 200)
espButton.Text = "ESP: OFF"
espButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
espButton.TextColor3 = Color3.fromRGB(255, 255, 255)
espButton.Font = Enum.Font.GothamBold
espButton.TextSize = 14
espButton.Parent = mainFrame

local function toggleESP(state)
    for _, v in pairs(game.Players:GetPlayers()) do
        if v ~= player and v.Character then
            for _, part in pairs(v.Character:GetChildren()) do
                if part:IsA("BasePart") and not part:FindFirstChild("ESP") then
                    local highlight = Instance.new("BoxHandleAdornment")
                    highlight.Size = part.Size + Vector3.new(0.1, 0.1, 0.1)
                    highlight.Color3 = Color3.fromRGB(128, 0, 255)
                    highlight.Transparency = 0.5
                    highlight.Adornee = part
                    highlight.AlwaysOnTop = true
                    highlight.ZIndex = 10
                    highlight.Parent = part
                    highlight.Name = "ESP"
                end
            end
        end
    end

    if not state then
        for _, v in pairs(game.Players:GetPlayers()) do
            if v.Character then
                for _, part in pairs(v.Character:GetChildren()) do
                    if part:IsA("BasePart") and part:FindFirstChild("ESP") then
                        part:FindFirstChild("ESP"):Destroy()
                    end
                end
            end
        end
    end
end

espButton.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    espButton.BackgroundColor3 = espEnabled and Color3.fromRGB(128, 0, 255) or Color3.fromRGB(50, 50, 50)
    espButton.Text = espEnabled and "ESP: ON" or "ESP: OFF"
    toggleESP(espEnabled)
end)

-- Movable Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 80, 0, 30)
toggleButton.Position = UDim2.new(0.9, -90, 0.1, 0)
toggleButton.Text = "Toggle UI"
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextSize = 12
toggleButton.Parent = screenGui

local isVisible = true
toggleButton.MouseButton1Click:Connect(function()
    isVisible = not isVisible
    mainFrame.Visible = isVisible
end)